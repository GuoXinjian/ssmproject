<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Maapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxj.dao.UserDao">

    <sql id="user_field">
        ${prefix}.id as "id",
        ${prefix}.name as "name",
        ${prefix}.password as "password"
    </sql>

    <resultMap id="userMap" type="com.gxj.model.User">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="password" column="password"></result>
    </resultMap>
    
    
    <select id="findAll" resultMap="userMap">
        select
        <include refid="user_field">
            <property name="prefix" value="a"/>
        </include>
        from user as a
    </select>



    <select id="findById" parameterType="String" resultType="com.gxj.model.User">
        select * from user
        where id = #{id}
    </select>

    <select id="findByName" parameterType="String" resultType="com.gxj.model.User">
        select * from user
        where id = #{name}
    </select>

    <select id="findByNameAndPassword" parameterType="String" resultType="com.gxj.model.User">
        select * from  user
        where 1 = 1

        <choose>
            <when test="name != null and name != ' '.toString() ">
                and name = #{name}
            </when>
            <when test="password !=null and password != ' '.toString() ">
                and password= #{password}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="name != null and name != '' ">
            and name = #{name}
        </if>
        <if test="password != null and password != ' ' ">
            and password= #{password}
        </if>
    </select>

    <select id="countByName" parameterType="String" resultType="int">
        select count(*) from user 
        where name=#{name}
    </select>
    
    <insert id="insert" parameterType="com.gxj.model.User"
            useGeneratedKeys="true" keyProperty="id">
        insert  into  user(id,name,password)
        values (#{id},#{name},#{password})
    </insert>
    
    <update id="update" parameterType="com.gxj.model.User">
        update user
        set name = #{name},
        password = #{password}
        where id=#{id}
    </update>
    
    <delete id="delete" parameterType="int">
        delete from user
        where id = #{id}
    </delete>

    <delete id="deleteByName" parameterType="String">
        delete from user
        where name=#{name}
    </delete>
</mapper>